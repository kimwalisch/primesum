# Test configuration for Travis CI. See <https://travis-ci.org/>.
language: cpp

matrix:
  include:
    - os: osx
      compiler: clang

    - os: linux
      dist: xenial
      compiler: clang

    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - g++-5
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - COMPILERS="CC=gcc-5 && CXX=g++-5"

    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - g++-6
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - COMPILERS="CC=gcc-6 && CXX=g++-6"

    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - g++-7
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - COMPILERS="CC=gcc-7 && CXX=g++-7"

    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - g++-8
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - COMPILERS="CC=gcc-8 && CXX=g++-8"

    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - mingw-w64
      env:
        - COMPILERS="CC=x86_64-w64-mingw32-gcc-posix && CXX=x86_64-w64-mingw32-g++-posix"

env:
  global:
    - WARNING_FLAGS="-Wall -Wextra -Werror -pedantic -Wno-missing-braces"
    - CXXFLAGS="-O3 $WARNING_FLAGS"
    - SANITIZER_FLAGS="-O1 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover=all -fno-omit-frame-pointer $WARNING_FLAGS"
    - OMP_NUM_THREADS=4

before_install:
  # Overwrite default CC and CXX
  - eval "${COMPILERS}"

install:
  - |
    if [ "${TRAVIS_OS_NAME}" = "linux" ]
    then
        sudo apt-get install -y make cmake cppcheck valgrind
    fi

script:
  - |
    if [ "$CXX" = "x86_64-w64-mingw32-g++-posix" ]
    then
        # 1) Test MinGW/GCC compilation
        mkdir build
        cd build
        cmake .. -DCMAKE_SYSTEM_NAME=Windows \
                 -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
                 -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY
        make -j4 VERBOSE=1

    elif [ "${TRAVIS_OS_NAME}" = "linux" ]
    then
        # 1) Static code analysis
        cppcheck src include --error-exitcode=1

        # 2) Run test suite
        mkdir build
        cd build
        if [ "${CXX:0:3}" = "g++" ]
        then
            cmake ..
        fi
        if [ "$CXX" = "clang++" ]
        then
            cmake .. -DWITH_OPENMP=OFF
        fi
        make -j4
        ldd primesum
        ./primesum --test

        # 3) Runtime memory analysis
        valgrind --error-exitcode=1 ./primesum 1e14

    elif [ "${TRAVIS_OS_NAME}" = "osx" ]
    then
        # 1) Run test suite
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug \
                 -DCMAKE_CXX_FLAGS="$SANITIZER_FLAGS"
        make -j4 VERBOSE=1
        ./primesum --test
    fi
